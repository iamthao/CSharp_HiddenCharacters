Ž
VD:\GithubSvn\GitHub\TestCommitGithub\ImportDataExcel\Repository\LibActionRepository.cs
	namespace

 	

Repository


 
{ 
public 

class 
LibActionRepository $
{ 
private	 
readonly 
TestDbContext (
_context) 1
;1 2
public	 
LibActionRepository #
(# $
)$ %
{ 	
_context 
= 
new 
TestDbContext )
() *
)* +
;+ ,
} 	
public 
	LibAction 
GetById  
(  !
int! $
id% '
)' (
{ 	
try 
{ 
var 
entity 
= 
_context %
.% &

LibActions& 0
.0 1
FirstOrDefault1 ?
(? @
o@ A
=>B D
oE F
.F G
IdG I
==J L
idM O
)O P
;P Q
return 
entity 
; 
} 
catch 
( 
	Exception 
ex 
)  
{ 
throw 
new 
	Exception #
(# $
ex$ &
.& '
Message' .
). /
;/ 0
} 
} 	
public!! 
List!! 
<!! 
	LibAction!! 
>!! 
GetAll!! %
(!!% &
)!!& '
{"" 	
try## 
{$$ 
var%% 
entity%% 
=%% 
_context%% %
.%%% &

LibActions%%& 0
.%%0 1
ToList%%1 7
(%%7 8
)%%8 9
;%%9 :
return,, 
entity,, 
;,, 
}-- 
catch.. 
(.. 
	Exception.. 
ex.. 
)..  
{// 
throw00 
new00 
	Exception00 #
(00# $
ex00$ &
.00& '
Message00' .
)00. /
;00/ 0
}11 
}22 	
}44 
}55  
TD:\GithubSvn\GitHub\TestCommitGithub\ImportDataExcel\Repository\LibTaskRepository.cs
	namespace

 	

Repository


 
{ 
public 

class 
LibTaskRepository "
{ 
private 
readonly 
TestDbContext '
_context( 0
;0 1
public 
LibTaskRepository  
(  !
)! "
{ 	
_context 
= 
new 
TestDbContext )
() *
)* +
;+ ,
} 	
public 
LibTask 
GetById 
( 
int "
id# %
)% &
{ 	
try 
{ 
var 
entity 
= 
_context %
.% &
LibTasks& .
.. /
FirstOrDefault/ =
(= >
o> ?
=>@ B
oC D
.D E
IdE G
==H J
idK M
)M N
;N O
return 
entity 
; 
} 
catch 
( 
	Exception 
ex 
)  
{ 
throw 
new 
	Exception #
(# $
ex$ &
.& '
Message' .
). /
;/ 0
} 
} 	
}   
}!! ¢
VD:\GithubSvn\GitHub\TestCommitGithub\ImportDataExcel\Repository\MilestoneRepository.cs
	namespace 	

Repository
 
{ 
public 

class 
MilestoneRepository $
{ 
private 
readonly 
TestDbContext '
_context( 0
;0 1
public 
MilestoneRepository "
(" #
)# $
{ 	
_context 
= 
new 
TestDbContext )
() *
)* +
;+ ,
} 	
public 
List 
< 
MilestoneGridvo #
># $
GetListLibTask% 3
(3 4
)4 5
{ 	
var 
data 
= 
_context 
.  

Milestones  *
.* +
Select+ 1
(1 2
o2 3
=>4 6
new7 :
MilestoneGridvo; J
{ 
Id 
= 
o 
. 
Id 
, 
Name 
= 
o 
. 
Name 
, 
} 
) 
. 
ToList 
( 
) 
; 
return 
data 
; 
} 	
public 
	Milestone 
GetById  
(  !
int! $
id% '
)' (
{   	
try!! 
{"" 
var## 
entity## 
=## 
_context## %
.##% &

Milestones##& 0
.##0 1
FirstOrDefault##1 ?
(##? @
o##@ A
=>##B D
o##E F
.##F G
Id##G I
==##J L
id##M O
)##O P
;##P Q
return$$ 
entity$$ 
;$$ 
}%% 
catch&& 
(&& 
	Exception&& 
ex&& 
)&&  
{'' 
throw(( 
new(( 
	Exception(( #
(((# $
$str(($ -
)((- .
;((. /
})) 
}** 	
public,, 
	Milestone,, 
CreateOrUpdate,, '
(,,' (
	Milestone,,( 1
entity,,2 8
),,8 9
{-- 	
try.. 
{// 
_context00 
.00 
Entry00 
(00 
entity00 %
)00% &
.00& '
State00' ,
=00- .
entity00/ 5
.005 6
Id006 8
==009 ;
$num00; <
?00= >
EntityState00? J
.00J K
Added00K P
:00P Q
EntityState00S ^
.00^ _
Modified00_ g
;00g h
_context11 
.11 
SaveChanges11 $
(11$ %
)11% &
;11& '
return22 
entity22 
;22 
}33 
catch44 
(44 
	Exception44 
ex44 
)44  
{55 
throw66 
new66 
	Exception66 #
(66# $
$str66$ -
)66- .
;66. /
}77 
}88 	
}:: 
};; §
\D:\GithubSvn\GitHub\TestCommitGithub\ImportDataExcel\Repository\MilestoneStatusRepository.cs
	namespace

 	

Repository


 
{ 
public 

class %
MilestoneStatusRepository *
{ 
private 
readonly 
TestDbContext '
_context( 0
;0 1
public %
MilestoneStatusRepository (
(( )
)) *
{ 	
_context 
= 
new 
TestDbContext )
() *
)* +
;+ ,
} 	
public 
MilestoneStatus 
GetById &
(& '
int' *
id+ -
)- .
{ 	
try 
{ 
var 
entity 
= 
_context %
.% &
MilestoneStatuses& 7
.7 8
FirstOrDefault8 F
(F G
oG H
=>I K
oL M
.M N
IdN P
==Q S
idT V
)V W
;W X
return 
entity 
; 
} 
catch 
( 
	Exception 
ex 
)  
{ 
throw 
new 
	Exception #
(# $
$str$ -
)- .
;. /
} 
} 	
}!! 
}"" …
ZD:\GithubSvn\GitHub\TestCommitGithub\ImportDataExcel\Repository\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *ñ
WD:\GithubSvn\GitHub\TestCommitGithub\ImportDataExcel\Repository\TaskActionRepository.cs
	namespace

 	

Repository


 
{ 
public 

class  
TaskActionRepository %
{ 
private 
readonly 
TestDbContext &
_context' /
;/ 0
public  
TaskActionRepository "
(" #
)# $
{ 	
_context 
= 
new 
TestDbContext )
() *
)* +
;+ ,
} 	
public 

TaskAction 
GetById  
(  !
int! $
id% '
)' (
{ 
try 
{ 
var 
entity 
= 
_context $
.$ %
TaskActions% 0
.0 1
FirstOrDefault1 ?
(? @
o@ A
=>B D
oE F
.F G
IdG I
==J L
idM O
)O P
;P Q
return 
entity 
; 
} 
catch 
( 
	Exception 
ex 
) 
{ 
throw 
new 
	Exception "
(" #
$str# ,
), -
;- .
} 
} 
public!! 

TaskAction!!  
GetTaskIdAndActionId!! .
(!!. /
int!!/ 2
taskId!!3 9
,!!9 :
int!!; >
actionId!!? G
)!!G H
{"" 	
try## 
{$$ 
var%% 
entity%% 
=%% 
_context%% %
.%%% &
TaskActions%%& 1
.%%1 2
FirstOrDefault%%2 @
(%%@ A
o%%A B
=>%%C E
o%%F G
.%%G H
TaskId%%H N
==%%O Q
taskId%%R X
&&%%Y [
o%%\ ]
.%%] ^
ActionId%%^ f
==%%g i
actionId%%j r
)%%r s
;%%s t
return&& 
entity&& 
;&& 
}'' 
catch(( 
((( 
	Exception(( 
ex(( 
)((  
{)) 
throw** 
new** 
	Exception** #
(**# $
$str**$ -
)**- .
;**. /
}++ 
},, 	
}00 
}11 